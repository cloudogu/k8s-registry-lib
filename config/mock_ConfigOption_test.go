// Code generated by mockery v2.42.1. DO NOT EDIT.

package config

import mock "github.com/stretchr/testify/mock"

// MockConfigOption is an autogenerated mock type for the ConfigOption type
type MockConfigOption struct {
	mock.Mock
}

type MockConfigOption_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigOption) EXPECT() *MockConfigOption_Expecter {
	return &MockConfigOption_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields: config
func (_m *MockConfigOption) Execute(config *Config) {
	_m.Called(config)
}

// MockConfigOption_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type MockConfigOption_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
//   - config *Config
func (_e *MockConfigOption_Expecter) Execute(config interface{}) *MockConfigOption_Execute_Call {
	return &MockConfigOption_Execute_Call{Call: _e.mock.On("Execute", config)}
}

func (_c *MockConfigOption_Execute_Call) Run(run func(config *Config)) *MockConfigOption_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*Config))
	})
	return _c
}

func (_c *MockConfigOption_Execute_Call) Return() *MockConfigOption_Execute_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockConfigOption_Execute_Call) RunAndReturn(run func(*Config)) *MockConfigOption_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfigOption creates a new instance of MockConfigOption. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigOption(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigOption {
	mock := &MockConfigOption{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
